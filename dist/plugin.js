"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function compose(o, services, funs) {
    return function (initial) {
        if (initial === void 0) { initial = {}; }
        return funs
            .map(function (f) { return f(o, services); })
            .reduce(function (acc, v) { return v(acc); }, initial);
    };
}
function plugin(gen, routeOptions, services) {
    function p(server, _, next) {
        var routes = [];
        ['create', 'read', 'update', 'delete', 'query'].forEach(function (action) {
            var o = Object.assign({}, routeOptions, {
                kind: 'attributes',
                action: action,
            });
            routes.push(compose(o, services, gen)());
        });
        Object.keys(routeOptions.model.schema.relationships).forEach(function (relationship) {
            ['create', 'read', 'update', 'delete'].forEach(function (action) {
                var o = Object.assign({}, routeOptions, {
                    kind: 'relationship',
                    action: action,
                    relationship: relationship,
                });
                routes.push(compose(o, services, gen)());
            });
        });
        server.route(routes);
        next();
    }
    p['attributes'] = Object.assign({}, {
        version: '1.0.0',
        name: routeOptions.model.type,
    });
    return p;
}
exports.plugin = plugin;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wbHVnaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFZQSxpQkFDRSxDQUFlLEVBQ2YsUUFBdUIsRUFDdkIsSUFBd0I7SUFFeEIsTUFBTSxDQUFDLFVBQUMsT0FBOEM7UUFBOUMsd0JBQUEsRUFBQSxZQUE4QztRQUNwRCxPQUFBLElBQUk7YUFDRCxHQUFHLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxFQUFkLENBQWMsQ0FBQzthQUN4QixNQUFNLENBQUMsVUFBQyxHQUFHLEVBQUUsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFOLENBQU0sRUFBRSxPQUFPLENBQTRCO0lBRmpFLENBRWlFLENBQUM7QUFDdEUsQ0FBQztBQUVELGdCQUNFLEdBQXVCLEVBQ3ZCLFlBQStCLEVBQy9CLFFBQXVCO0lBRXZCLFdBQVcsTUFBbUIsRUFBRSxDQUFDLEVBQUUsSUFBSTtRQUNyQyxJQUFNLE1BQU0sR0FBOEIsRUFBRSxDQUFDO1FBQzdDLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFBLE1BQU07WUFDNUQsSUFBTSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsWUFBWSxFQUFFO2dCQUN4QyxJQUFJLEVBQUUsWUFBWTtnQkFDbEIsTUFBTSxFQUFFLE1BQU07YUFDZixDQUFpQixDQUFDO1lBQ25CLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxDQUFDLElBQUksQ0FDVCxZQUFZLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQ3hDLENBQUMsT0FBTyxDQUFDLFVBQUEsWUFBWTtZQUNwQixDQUFDLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFBLE1BQU07Z0JBQ25ELElBQU0sQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFlBQVksRUFBRTtvQkFDeEMsSUFBSSxFQUFFLGNBQWM7b0JBQ3BCLE1BQU0sRUFBRSxNQUFNO29CQUNkLFlBQVksRUFBRSxZQUFZO2lCQUMzQixDQUFpQixDQUFDO2dCQUNuQixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUMzQyxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQixJQUFJLEVBQUUsQ0FBQztJQUNULENBQUM7SUFDRCxDQUFDLENBQUMsWUFBWSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FDN0IsRUFBRSxFQUNGO1FBQ0UsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLFlBQVksQ0FBQyxLQUFLLENBQUMsSUFBSTtLQUM5QixDQUNGLENBQUM7SUFDRixNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ1gsQ0FBQztBQXJDRCx3QkFxQ0MiLCJmaWxlIjoicGx1Z2luLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kZWwsIE1vZGVsRGF0YSwgTW9kZWxSZWZlcmVuY2UgfSBmcm9tICdwbHVtcCc7XG5pbXBvcnQgKiBhcyBIYXBpIGZyb20gJ2hhcGknO1xuaW1wb3J0IHtcbiAgVHJhbnNmb3JtZXIsXG4gIFJvdXRlR2VuZXJhdG9yLFxuICBTZWdtZW50R2VuZXJhdG9yLFxuICBCYXNpY1JvdXRlT3B0aW9ucyxcbiAgU3RydXRSb3V0ZUNvbmZpZ3VyYXRpb24sXG4gIFJvdXRlT3B0aW9ucyxcbiAgU3RydXRTZXJ2aWNlcyxcbn0gZnJvbSAnLi9kYXRhVHlwZXMnO1xuXG5mdW5jdGlvbiBjb21wb3NlKFxuICBvOiBSb3V0ZU9wdGlvbnMsXG4gIHNlcnZpY2VzOiBTdHJ1dFNlcnZpY2VzLFxuICBmdW5zOiBTZWdtZW50R2VuZXJhdG9yW10sXG4pIHtcbiAgcmV0dXJuIChpbml0aWFsOiBQYXJ0aWFsPFN0cnV0Um91dGVDb25maWd1cmF0aW9uPiA9IHt9KSA9PlxuICAgIGZ1bnNcbiAgICAgIC5tYXAoZiA9PiBmKG8sIHNlcnZpY2VzKSlcbiAgICAgIC5yZWR1Y2UoKGFjYywgdikgPT4gdihhY2MpLCBpbml0aWFsKSBhcyBTdHJ1dFJvdXRlQ29uZmlndXJhdGlvbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBsdWdpbihcbiAgZ2VuOiBTZWdtZW50R2VuZXJhdG9yW10sXG4gIHJvdXRlT3B0aW9uczogQmFzaWNSb3V0ZU9wdGlvbnMsXG4gIHNlcnZpY2VzOiBTdHJ1dFNlcnZpY2VzLFxuKSB7XG4gIGZ1bmN0aW9uIHAoc2VydmVyOiBIYXBpLlNlcnZlciwgXywgbmV4dCkge1xuICAgIGNvbnN0IHJvdXRlczogSGFwaS5Sb3V0ZUNvbmZpZ3VyYXRpb25bXSA9IFtdO1xuICAgIFsnY3JlYXRlJywgJ3JlYWQnLCAndXBkYXRlJywgJ2RlbGV0ZScsICdxdWVyeSddLmZvckVhY2goYWN0aW9uID0+IHtcbiAgICAgIGNvbnN0IG8gPSBPYmplY3QuYXNzaWduKHt9LCByb3V0ZU9wdGlvbnMsIHtcbiAgICAgICAga2luZDogJ2F0dHJpYnV0ZXMnLFxuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgIH0pIGFzIFJvdXRlT3B0aW9ucztcbiAgICAgIHJvdXRlcy5wdXNoKGNvbXBvc2Uobywgc2VydmljZXMsIGdlbikoKSk7XG4gICAgfSk7XG4gICAgT2JqZWN0LmtleXMoXG4gICAgICByb3V0ZU9wdGlvbnMubW9kZWwuc2NoZW1hLnJlbGF0aW9uc2hpcHMsXG4gICAgKS5mb3JFYWNoKHJlbGF0aW9uc2hpcCA9PiB7XG4gICAgICBbJ2NyZWF0ZScsICdyZWFkJywgJ3VwZGF0ZScsICdkZWxldGUnXS5mb3JFYWNoKGFjdGlvbiA9PiB7XG4gICAgICAgIGNvbnN0IG8gPSBPYmplY3QuYXNzaWduKHt9LCByb3V0ZU9wdGlvbnMsIHtcbiAgICAgICAgICBraW5kOiAncmVsYXRpb25zaGlwJyxcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICByZWxhdGlvbnNoaXA6IHJlbGF0aW9uc2hpcCxcbiAgICAgICAgfSkgYXMgUm91dGVPcHRpb25zO1xuICAgICAgICByb3V0ZXMucHVzaChjb21wb3NlKG8sIHNlcnZpY2VzLCBnZW4pKCkpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgc2VydmVyLnJvdXRlKHJvdXRlcyk7XG4gICAgbmV4dCgpO1xuICB9XG4gIHBbJ2F0dHJpYnV0ZXMnXSA9IE9iamVjdC5hc3NpZ24oXG4gICAge30sXG4gICAge1xuICAgICAgdmVyc2lvbjogJzEuMC4wJyxcbiAgICAgIG5hbWU6IHJvdXRlT3B0aW9ucy5tb2RlbC50eXBlLFxuICAgIH0sXG4gICk7XG4gIHJldHVybiBwO1xufVxuIl19
