"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Oracle = (function () {
    function Oracle(keyService) {
        this.keyService = keyService;
        this.authorizers = {};
    }
    Oracle.prototype.addAuthorizer = function (auth, forType) {
        this.authorizers[forType] = auth;
    };
    Oracle.prototype.dispatch = function (request) {
        var _this = this;
        return Promise.resolve()
            .then(function () {
            if (request.kind === 'compound') {
                return Promise.all(request.list.map(function (v) { return _this.dispatch(v); }))
                    .then(function (res) {
                    return request.combinator === 'or'
                        ? res.some(function (v) { return v.result; })
                        : res.every(function (v) { return v.result; });
                })
                    .then(function (f) { return ({ kind: 'final', result: f }); });
            }
            else {
                return _this.authorizers[request.target.type].authorize(request);
            }
        })
            .then(function (v) {
            if (v.kind === 'final') {
                return v;
            }
            else if (v.kind === 'delegated') {
                return _this.dispatch(v.delegate);
            }
        });
    };
    Oracle.prototype.authorize = function (request) {
        return this.dispatch(request).then(function (f) { return f.result; });
    };
    return Oracle;
}());
exports.Oracle = Oracle;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9vcmFjbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFhQTtJQUdFLGdCQUFtQixVQUF1QjtRQUF2QixlQUFVLEdBQVYsVUFBVSxDQUFhO1FBRm5DLGdCQUFXLEdBQTZDLEVBQUUsQ0FBQztJQUVyQixDQUFDO0lBRTlDLDhCQUFhLEdBQWIsVUFBYyxJQUEwQixFQUFFLE9BQWU7UUFDdkQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsR0FBRyxJQUFJLENBQUM7SUFDbkMsQ0FBQztJQUVELHlCQUFRLEdBQVIsVUFBUyxPQUF5QjtRQUFsQyxpQkF1QkM7UUF0QkMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUU7YUFDckIsSUFBSSxDQUFvQjtZQUN2QixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsS0FBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBaEIsQ0FBZ0IsQ0FBQyxDQUFDO3FCQUN4RCxJQUFJLENBQ0gsVUFBQyxHQUE2QjtvQkFDNUIsT0FBQSxPQUFPLENBQUMsVUFBVSxLQUFLLElBQUk7MEJBQ3ZCLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsTUFBTSxFQUFSLENBQVEsQ0FBQzswQkFDdkIsR0FBRyxDQUFDLEtBQUssQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxNQUFNLEVBQVIsQ0FBUSxDQUFDO2dCQUY1QixDQUU0QixDQUMvQjtxQkFDQSxJQUFJLENBQXlCLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQTlCLENBQThCLENBQUMsQ0FBQztZQUN2RSxDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ04sTUFBTSxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDbEUsQ0FBQztRQUNILENBQUMsQ0FBQzthQUNELElBQUksQ0FBQyxVQUFBLENBQUM7WUFDTCxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZCLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDWCxDQUFDO1lBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFDbEMsTUFBTSxDQUFDLEtBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ25DLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCwwQkFBUyxHQUFULFVBQVUsT0FBeUI7UUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsQ0FBeUIsSUFBSyxPQUFBLENBQUMsQ0FBQyxNQUFNLEVBQVIsQ0FBUSxDQUFDLENBQUM7SUFDOUUsQ0FBQztJQUNILGFBQUM7QUFBRCxDQXJDQSxBQXFDQyxJQUFBO0FBckNZLHdCQUFNIiwiZmlsZSI6Im9yYWNsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEF1dGhvcml6ZXJEZWZpbml0aW9uLFxuICBBdXRob3JpemVSZXF1ZXN0LFxuICBBdXRob3JpemVSZXNwb25zZSxcbiAgRmluYWxBdXRob3JpemVSZXNwb25zZSxcbiAgS2V5U2VydmljZSxcbiAgUm91dGVPcHRpb25zLFxufSBmcm9tICcuL2RhdGFUeXBlcyc7XG5cbmltcG9ydCB7IE1vZGVsRGF0YSB9IGZyb20gJ3BsdW1wJztcblxuaW1wb3J0IHsgUmVxdWVzdCB9IGZyb20gJ2hhcGknO1xuXG5leHBvcnQgY2xhc3MgT3JhY2xlIHtcbiAgcHVibGljIGF1dGhvcml6ZXJzOiB7IFtuYW1lOiBzdHJpbmddOiBBdXRob3JpemVyRGVmaW5pdGlvbiB9ID0ge307XG5cbiAgY29uc3RydWN0b3IocHVibGljIGtleVNlcnZpY2U/OiBLZXlTZXJ2aWNlKSB7fVxuXG4gIGFkZEF1dGhvcml6ZXIoYXV0aDogQXV0aG9yaXplckRlZmluaXRpb24sIGZvclR5cGU6IHN0cmluZykge1xuICAgIHRoaXMuYXV0aG9yaXplcnNbZm9yVHlwZV0gPSBhdXRoO1xuICB9XG5cbiAgZGlzcGF0Y2gocmVxdWVzdDogQXV0aG9yaXplUmVxdWVzdCk6IFByb21pc2U8RmluYWxBdXRob3JpemVSZXNwb25zZT4ge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKVxuICAgICAgLnRoZW48QXV0aG9yaXplUmVzcG9uc2U+KCgpID0+IHtcbiAgICAgICAgaWYgKHJlcXVlc3Qua2luZCA9PT0gJ2NvbXBvdW5kJykge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChyZXF1ZXN0Lmxpc3QubWFwKHYgPT4gdGhpcy5kaXNwYXRjaCh2KSkpXG4gICAgICAgICAgICAudGhlbihcbiAgICAgICAgICAgICAgKHJlczogRmluYWxBdXRob3JpemVSZXNwb25zZVtdKSA9PlxuICAgICAgICAgICAgICAgIHJlcXVlc3QuY29tYmluYXRvciA9PT0gJ29yJ1xuICAgICAgICAgICAgICAgICAgPyByZXMuc29tZSh2ID0+IHYucmVzdWx0KVxuICAgICAgICAgICAgICAgICAgOiByZXMuZXZlcnkodiA9PiB2LnJlc3VsdCksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICAudGhlbjxGaW5hbEF1dGhvcml6ZVJlc3BvbnNlPihmID0+ICh7IGtpbmQ6ICdmaW5hbCcsIHJlc3VsdDogZiB9KSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuYXV0aG9yaXplcnNbcmVxdWVzdC50YXJnZXQudHlwZV0uYXV0aG9yaXplKHJlcXVlc3QpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgLnRoZW4odiA9PiB7XG4gICAgICAgIGlmICh2LmtpbmQgPT09ICdmaW5hbCcpIHtcbiAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfSBlbHNlIGlmICh2LmtpbmQgPT09ICdkZWxlZ2F0ZWQnKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuZGlzcGF0Y2godi5kZWxlZ2F0ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICB9XG5cbiAgYXV0aG9yaXplKHJlcXVlc3Q6IEF1dGhvcml6ZVJlcXVlc3QpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm4gdGhpcy5kaXNwYXRjaChyZXF1ZXN0KS50aGVuKChmOiBGaW5hbEF1dGhvcml6ZVJlc3BvbnNlKSA9PiBmLnJlc3VsdCk7XG4gIH1cbn1cbiJdfQ==
